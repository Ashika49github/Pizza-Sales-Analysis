
PIZZA SALES SQL QUERIES
KPIâ€™s
1. Total Revenue:
SELECT SUM(total_price) AS Total_Revenue FROM pizza_sales;
 
2. Average Order Value
SELECT (SUM(total_price) / COUNT(DISTINCT order_id)) AS Avg_order_Value FROM pizza_sales
 
3. Total Pizzas Sold
SELECT SUM(quantity) AS Total_pizza_sold FROM pizza_sales
 
4. Total Orders
SELECT COUNT(DISTINCT order_id) AS Total_Orders FROM pizza_sales
 




5. Average Pizzas Per Order
SELECT CAST(CAST(SUM(quantity) AS DECIMAL(10,2)) / 
CAST(COUNT(DISTINCT order_id) AS DECIMAL(10,2)) AS DECIMAL(10,2))
AS Avg_Pizzas_per_order
FROM pizza_sales
 

Chart Requirements
NOTE:
This Daily Trends and monthly trends have been done in Microsoft SQL server because date column was not getting converted into date format.

Daily Trend for Total Orders
SELECT DATENAME(DW, order_date) AS order_day, COUNT(DISTINCT order_id) AS total_orders 
FROM pizza_sales
GROUP BY DATENAME(DW, order_date)
Output:
 
Monthly Trend for Orders
select DATENAME(MONTH, order_date) as Month_Name, COUNT(DISTINCT order_id) as Total_Orders
from pizza_sales
GROUP BY DATENAME(MONTH, order_date)
Output
 

% of Sales by Pizza Category
SELECT pizza_category,
ROUND(SUM(total_price)) as total_sales,
CONCAT(ROUND(SUM(total_price) * 100 / (SELECT SUM(total_price) FROM pizza_sales),2),"%") as percentage_of_total
FROM pizza_sales
GROUP BY pizza_category;
 
% of Sales by Pizza Size
SELECT pizza_size,
ROUND(SUM(total_price)) as total_sales,
CONCAT(ROUND(SUM(total_price) * 100 / (SELECT SUM(total_price) FROM pizza_sales),2),"%") as percentage_of_total
FROM pizza_sales
GROUP BY pizza_size;
ORDER By pizza_size;
Output
 
Total Pizzas Sold by Pizza Category
SELECT pizza_category, SUM(quantity) as Total_Quantity_Sold
FROM pizza_sales
WHERE MONTH(order_date) = 2
GROUP BY pizza_category
ORDER BY Total_Quantity_Sold DESC
Output



Top 5 Pizzas by Revenue
SELECT pizza_name,SUM(total_price) as Revenue FROM pizza_sales
GROUP BY pizza_name
ORDER BY Revenue DESC
LIMIT 5;
Output
 

Bottom 5 Pizzas by Revenue
SELECT pizza_name, ROUND(SUM(total_price),2) AS Revenue FROM pizza_sales
GROUP BY pizza_name
ORDER BY Revenue ASC
LIMIT 5;
Output
 

Top 5 Pizzas by Quantity
SELECT pizza_name, ROUND(SUM(quantity),2) as total_quantity FROM pizza_sales
GROUP BY pizza_name
ORDER BY total_quantity DESC
LIMIT 5;
  
Bottom 5 Pizzas by Quantity
SELECT pizza_name, ROUND(SUM(quantity),2) AS total_quantity FROM pizza_sales
GROUP BY pizza_name
ORDER BY total_quantity ASC
LIMIT 5;
Output
 
Top 5 Pizzas by Total Orders
SELECT pizza_name, COUNT(DISTINCT order_id) AS Total_Orders
FROM pizza_sales
GROUP BY pizza_name
ORDER BY Total_Orders DESC
LIMIT 5
 
Borrom 5 Pizzas by Total Orders
SELECT pizza_name, COUNT(DISTINCT order_id) AS Total_Orders
FROM pizza_sales
GROUP BY pizza_name
ORDER BY Total_Orders ASC
LIMIT 5

 
NOTE
If you want to apply the pizza_category or pizza_size filters to the above queries you can use WHERE clause. Follow some of below examples
SELECT pizza_name, COUNT(DISTINCT order_id) AS Total_Orders
FROM pizza_sales
WHERE pizza_category = 'Classic'
GROUP BY pizza_name
ORDER BY Total_Orders ASC
LIMIT 5
